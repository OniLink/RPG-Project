[gd_scene load_steps=16 format=2]

[ext_resource path="res://Sprites/Placeholder-32x32.png" type="Texture" id=1]
[ext_resource path="res://Sprites/Placeholder-8x32.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D


enum State {
	DEFAULT,
	MELEE,
	SCRIPTED
}


const VELOCITY_WALK = 200
const VELOCITY_RUN_MOD = 1.5


var _state = State.DEFAULT
var _run_toggle = false
var _interactable_body = null


onready var Camera = GameCamera
onready var AnimationTree = $AnimationTree
onready var AnimationStateMachine = AnimationTree[ \"parameters/playback\" ]
onready var RotationHelper = $RotationHelper


# Initialize the player
func _ready():
	pass


# Physics update
func _physics_process( _delta ):
	match _state:
		State.DEFAULT:
			_state_default()
		
		State.MELEE:
			_state_melee()
			
		State.SCRIPTED:
			_state_scripted()
		
		_:
			pass


# Get the motion-related input
func get_motion():
	var velocity = Vector2( 0, 0 )

	velocity.x = Input.get_action_strength( \"pl_right\" ) - Input.get_action_strength( \"pl_left\" )
	velocity.y = Input.get_action_strength( \"pl_down\" ) - Input.get_action_strength( \"pl_up\" )

	if velocity.length_squared() > 1:
		velocity = velocity.normalized()
	
	velocity *= VELOCITY_WALK
	
	if Input.is_action_just_pressed( \"pl_run_toggle\" ):
		_run_toggle = !_run_toggle
	
	if Input.is_action_pressed( \"pl_run\" ) != _run_toggle: # If run is toggled on, run button walks. Otherwise, run button runs.
		velocity *= VELOCITY_RUN_MOD
	
	return velocity


# Check if there is an interaction available
func is_interact_enabled():
	return _interactable_body != null


# Set the current state to new_state
func set_state( new_state ):
	_on_state_end( _state )
	_state = new_state
	_on_state_begin( _state )


# Default State
func _state_default():
	# Get the motion
	var velocity = get_motion()
	
	# Update the internal rotations
	if velocity.length_squared() > 0:
		RotationHelper.rotation = velocity.angle()
	
	# Move the player
	velocity = move_and_slide( velocity )
	
	# Update the state if needed
	if Input.is_action_just_pressed( \"pl_interact\" ) and is_interact_enabled():
		_interactable_body.on_interact( self ) # Interactable bodies need an on_interact() method
	elif Input.is_action_just_pressed( \"pl_melee\" ):
		# Melee attack state
		set_state( State.MELEE )
	elif Input.is_action_just_pressed( \"pl_ranged\" ):
		# Ranged attack state
		pass
	
	# Update the camera
	Camera.set_camera_center( position )


# Melee State
func _state_melee():
	# Return to default after the animation ends
	if AnimationStateMachine.get_current_node() != \"AttackMelee\":
		_state = State.DEFAULT


# Scripted state (nothing happens, the player is under external control)
func _state_scripted():
	pass


# Begin a new state
func _on_state_begin( state ):
	match state:
		State.DEFAULT:
			pass
		
		State.MELEE:
			AnimationStateMachine.travel( \"AttackMelee\" )
		
		State.SCRIPTED:
			pass
		
		_:
			pass


# Ends a state
func _on_state_end( state ):
	match state:
		State.DEFAULT:
			pass
		
		State.MELEE:
			pass
		
		State.SCRIPTED:
			pass
		
		_:
			pass


# Acquire interactable body
# Assumption: Only one body will enter the area at a time
func _on_InteractionBox_body_entered( body ):
	_interactable_body = body


# Lose interactable body
# Assumption: Only one body will enter the area at a time
func _on_InteractionBox_body_exited( _body ):
	_interactable_body = null
"

[sub_resource type="CircleShape2D" id=2]
radius = 16.0

[sub_resource type="AnimationNodeAnimation" id=4]
animation = "AttackMelee"

[sub_resource type="AnimationNodeAnimation" id=5]
animation = "Idle"

[sub_resource type="AnimationNodeStateMachineTransition" id=6]

[sub_resource type="AnimationNodeStateMachineTransition" id=7]
switch_mode = 2
auto_advance = true

[sub_resource type="AnimationNodeStateMachine" id=8]
states/AttackMelee/node = SubResource( 4 )
states/AttackMelee/position = Vector2( 517, 128 )
states/Idle/node = SubResource( 5 )
states/Idle/position = Vector2( 255, 128 )
transitions = [ "Idle", "AttackMelee", SubResource( 6 ), "AttackMelee", "Idle", SubResource( 7 ) ]
start_node = "Idle"

[sub_resource type="AnimationNodeStateMachinePlayback" id=9]

[sub_resource type="Animation" id=10]
resource_name = "AttackMelee"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("RotationHelper/Sword/SwordSprite:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("RotationHelper/Sword/HitBox/HitMask:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("RotationHelper/Sword:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -45.0, 45.0 ]
}

[sub_resource type="Animation" id=11]
tracks/0/type = "value"
tracks/0/path = NodePath("RotationHelper/Sword/SwordSprite:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="CircleShape2D" id=12]
radius = 16.0

[sub_resource type="SegmentShape2D" id=13]
a = Vector2( 16, 0 )
b = Vector2( 64, 0 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 16, 2 )

[node name="Player" type="KinematicBody2D"]
collision_layer = 524288
collision_mask = 524288
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionMask" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 8 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 9 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/AttackMelee = SubResource( 10 )
anims/Idle = SubResource( 11 )

[node name="HurtBox" type="Area2D" parent="."]
collision_layer = 2
collision_mask = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="HurtBox"]
shape = SubResource( 12 )

[node name="RotationHelper" type="Node2D" parent="."]

[node name="InteractionBox" type="Area2D" parent="RotationHelper"]
collision_layer = 16
collision_mask = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="RotationHelper/InteractionBox"]
shape = SubResource( 13 )

[node name="Sword" type="Node2D" parent="RotationHelper"]
rotation = -0.785398

[node name="SwordSprite" type="Sprite" parent="RotationHelper/Sword"]
position = Vector2( 16, 0 )
texture = ExtResource( 2 )
offset = Vector2( 16, 0 )

[node name="HitBox" type="Area2D" parent="RotationHelper/Sword"]
collision_mask = 8

[node name="HitMask" type="CollisionShape2D" parent="RotationHelper/Sword/HitBox"]
position = Vector2( 32, 0 )
shape = SubResource( 3 )
[connection signal="body_entered" from="RotationHelper/InteractionBox" to="." method="_on_InteractionBox_body_entered"]
[connection signal="body_exited" from="RotationHelper/InteractionBox" to="." method="_on_InteractionBox_body_exited"]
